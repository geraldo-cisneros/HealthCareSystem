/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HealthCareSystem;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author geraldocisneros
 */
public class PatientChart extends javax.swing.JFrame {

    /**
     * Creates new form PatientChart
     */
    public PatientChart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pLName = new javax.swing.JTextField();
        pFName = new javax.swing.JTextField();
        bday = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        ssn = new javax.swing.JTextField();
        phoneNumber = new javax.swing.JTextField();
        insuranceProvider = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        saveChartButton = new javax.swing.JButton();
        docList = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Patient Chart");

        jLabel2.setText("Patient First Name");

        jLabel3.setText("Patient Last Name");

        jLabel4.setText("Birth Date");

        jLabel5.setText("Address");

        jLabel6.setText("Insurance Provider");

        jLabel7.setText("SSN");

        jLabel8.setText("Phone Number");

        jLabel9.setText("Doctor");

        pLName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pLNameActionPerformed(evt);
            }
        });

        pFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFNameActionPerformed(evt);
            }
        });

        bday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdayActionPerformed(evt);
            }
        });

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        ssn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnActionPerformed(evt);
            }
        });

        phoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberActionPerformed(evt);
            }
        });

        insuranceProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceProviderActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        saveChartButton.setText("Save Chart");
        saveChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChartButtonActionPerformed(evt);
            }
        });

        docList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "J, Ward", "C, Loya", "D, Skinner", "K, Wang" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(insuranceProvider, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(phoneNumber)
                    .addComponent(bday)
                    .addComponent(pFName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(pLName, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(address)
                    .addComponent(ssn)
                    .addComponent(docList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(144, 144, 144))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(saveChartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
            .addGroup(layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(pLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insuranceProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(docList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveChartButton)
                    .addComponent(cancelButton))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pLNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pLNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pLNameActionPerformed

    private void pFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pFNameActionPerformed

    private void bdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bdayActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void ssnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssnActionPerformed

    private void phoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberActionPerformed

    private void insuranceProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceProviderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insuranceProviderActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChartButtonActionPerformed
        String first = pFName.getText();
        String last = pLName.getText();
        String bd = bday.getText();
        String pn = phoneNumber.getText();
        String ip = insuranceProvider.getText();
        String add = address.getText();
        String doctor = docList.getSelectedItem().toString();
        String social = ssn.getText();
        
        String treatFile = "src/main/java/HealthCareSystem/treatmentRecords.txt";
        String chartFile = "src/main/java/HealthCareSystem/patientCharts.txt";
        String temp = "src/main/java/HealthCareSystem/temp.txt";
        String outfile = "src/main/java/HealthCareSystem/output.txt";
        String flbday = first + " " + last + " " + bd;
        String oldChart = getPatientChart(flbday);
        System.out.println("OLDCHART: " + oldChart);
        
        String newChart = "\n"+ first + " " + last + " " + bd + "\n" +
                "Phone = " + pn + "\nInsurance = " + ip + "\nAddress = " 
                + add + "\nDoctor = " + doctor+ "\nSSN = " + social;        
        
        String newTreatment = "###\n" + first + " " + last + " " + bd + "\n" +
                "Height = " + "\nWeight = " + "\nBlood Pressure = " + "\nReason = " 
                + "\nTreatment = " + "\nRx= " + "\n###\n" ;
        
        Boolean found; 
        found = TreatmentRecord.recordExists(flbday, chartFile);
            if(found){
            try {
            ViewPatientChart.storeWriteData(oldChart, temp, false);
            CancelAppointment.updateDataFile(outfile, chartFile, temp);
            ViewPatientChart.storeWriteData(newChart, chartFile, true);
            } catch (IOException ex) {
                Logger.getLogger(ViewPatientChart.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }
        else{
            ViewPatientChart.storeWriteData(newChart, chartFile, true);
        }
        
        found = TreatmentRecord.recordExists(flbday, treatFile);
        if(!found){
          ViewPatientChart.storeWriteData(newTreatment, treatFile, true);
        }
        this.dispose();
    }//GEN-LAST:event_saveChartButtonActionPerformed

    public static void showPatientChart(String n){
        String line;
        PatientChart pc = new PatientChart();
        try{
            File charts = new File("src/main/java/HealthCareSystem/patientCharts.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    pc.setVisible(true);
                    pc.pFName.setText(line.split(" ")[0]);
                    pc.pLName.setText(line.split(" ")[1]);
                    pc.bday.setText(line.split(" ")[2]);
                    pc.phoneNumber.setText(scanner.nextLine().split(" = ")[1]);
                    pc.insuranceProvider.setText(scanner.nextLine().split(" = ")[1]);
                    pc.address.setText(scanner.nextLine().split(" = ")[1]);
                    pc.docList.setSelectedItem(scanner.nextLine().split(" = ")[1]);
                    pc.ssn.setText(scanner.nextLine().split(" = ")[1]);
                }
            }
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }

    public static void getPatientData(String n, Boolean s){
        PatientChart pc = new PatientChart();
        
        pc.pFName.setText(n.split(" ")[0]);
        pc.pLName.setText(n.split(" ")[1]);
        pc.bday.setText(n.split(" ")[2]);
        pc.setVisible(true);
        if (s){
            pc.ssn.setText(n.split(" ")[3]);
        }
        
    }
    
    
    public static void recoverDataOnCancel(String getfile, String setfile){
        FileInputStream inStream = null;
        FileOutputStream outStream = null;

        try {
                //Files objects
                File inputFile = new File(getfile);
                File outFile = new File(setfile);

                //Intialize input and output streams
                inStream = new FileInputStream(inputFile);
                outStream = new FileOutputStream(outFile);

                //The buffer size for reading data
                byte[] buffer = new byte[1024];

                int length;
                //Copy data to another file
                while ((length = inStream.read(buffer)) > 0) {
                        outStream.write(buffer, 0, length);
                }

                // Closing the input/output file streams
                inStream.close();
                outStream.close();

                System.out.println("Written Content to another file.");

        } catch (IOException e) {
                e.printStackTrace();


        }
    }
    
    public static String getPatientChart(String n){
        String line;
        String firstlastbday = " ", pn= " ", ip= " ",add = " ",  
               doctor = " ", social = " ",record = " ";
//        String newChart = "\n"+ first + " " + last + " " + bd + "\n" +
//                "Phone = " + pn + "\nInsurance = " + ip + "\nAddress = " 
//                + add + "\nDoctor = " + doctor+ "\nSSN = " + social;  
        Boolean found = false;
        try{
            File charts = new File("src/main/java/HealthCareSystem/treatmentRecords.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    found = true;
                    firstlastbday = line;
                    pn = scanner.nextLine();
                    ip = scanner.nextLine();
                    add = scanner.nextLine();
                    doctor = scanner.nextLine();
                    social = scanner.nextLine();
                }
                
            }
            scanner.close();
            if (!found){
                    JOptionPane.showMessageDialog(null, "Patient treatment record not found");
            }
            record = firstlastbday + "\n" +
                     pn + "\n" + ip + "\n" + add + "\n" + doctor + 
                     "\n" + social;
            
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        System.out.println("chart = " + record);
        return record; 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientChart().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField bday;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> docList;
    private javax.swing.JTextField insuranceProvider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField pFName;
    private javax.swing.JTextField pLName;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JButton saveChartButton;
    private javax.swing.JTextField ssn;
    // End of variables declaration//GEN-END:variables
}
