/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HealthCareSystem;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author geraldocisneros
 */
public class ViewPatientChart extends javax.swing.JFrame {

    /**
     * Creates new form ViewPatientChart
     */
    public ViewPatientChart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        address4 = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        social = new javax.swing.JLabel();
        doctor = new javax.swing.JLabel();
        insuranceProvider = new javax.swing.JLabel();
        pFName = new javax.swing.JLabel();
        pFName1 = new javax.swing.JLabel();
        birthdate = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        updateChartButton = new javax.swing.JButton();
        closeChartButton = new javax.swing.JButton();
        viewTreatmentRecordButton = new javax.swing.JButton();
        pLName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        address4.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        address.setText("jLabel9");
        address.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Address", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        social.setText("jLabel9");
        social.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "SSN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        doctor.setText("jLabel9");
        doctor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Doctor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        insuranceProvider.setText("jLabel9");
        insuranceProvider.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Insurance", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        pFName1.setText("jLabel9");
        pFName1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "First Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        birthdate.setText("jLabel9");
        birthdate.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Birth Date", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        phone.setText("jLabel9");
        phone.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Phone", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        updateChartButton.setText("Update Chart");
        updateChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateChartButtonActionPerformed(evt);
            }
        });

        closeChartButton.setText("Close");
        closeChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeChartButtonActionPerformed(evt);
            }
        });

        viewTreatmentRecordButton.setText("View Treatment Record");
        viewTreatmentRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTreatmentRecordButtonActionPerformed(evt);
            }
        });

        pLName.setText("jLabel9");
        pLName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Last Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Patient Chart");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(pFName)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(phone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(birthdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pFName1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(social, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(doctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(insuranceProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pLName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(311, 311, 311))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(updateChartButton)
                        .addGap(18, 18, 18)
                        .addComponent(viewTreatmentRecordButton)
                        .addGap(18, 18, 18)
                        .addComponent(closeChartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(birthdate)
                                .addGap(18, 18, 18)
                                .addComponent(address)
                                .addGap(15, 15, 15)
                                .addComponent(phone))
                            .addComponent(pFName1)
                            .addComponent(pFName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(closeChartButton)
                            .addComponent(viewTreatmentRecordButton)
                            .addComponent(updateChartButton))
                        .addGap(85, 85, 85))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pLName)
                        .addGap(18, 18, 18)
                        .addComponent(social)
                        .addGap(18, 18, 18)
                        .addComponent(doctor)
                        .addGap(18, 18, 18)
                        .addComponent(insuranceProvider)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateChartButtonActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        //copy all except old chart to new file
        //update patient info
        //save to new file
        //save new file as
        String first = pFName1.getText();
        String last = pLName.getText();
        String bd = birthdate.getText();
        String pn = phone.getText();
        String ip = insuranceProvider.getText();
        String add = address.getText();
        String doc = doctor.getText();
        String ssn = social.getText();
        
        String chart = "src/main/java/HealthCareSystem/patientCharts.txt";
        String temp = "src/main/java/HealthCareSystem/temp.txt";
        String output = "src/main/java/HealthCareSystem/output.txt";
        String data = TreatmentRecord.getTreatmentRecord(first + " " + last + " " + bd);
        PatientChart pc = new PatientChart();
        
        String oldChart = first + " " + last + " " + bd + "\n" +
                "Phone = " + pn + "\nInsurance = " + ip + "\nAddress = " 
                + add + "\nDoctor = " + doc+ "\nSSN = " + ssn + "\n";
        String init = first + " " + last + " " + bd;
        
        storeWriteData(oldChart, temp, false);
        try {
            CancelAppointment.updateDataFile(output, chart, temp);
            
            storeWriteData(data, temp, false);
            chart = "src/main/java/HealthCareSystem/treatmentRecords.txt";
            CancelAppointment.updateDataFile(output, chart, temp);
        } catch (IOException ex) {
            Logger.getLogger(ViewPatientChart.class.getName()).log(Level.SEVERE, null, ex);
        }
        storeWriteData(data, chart, true);
        storeWriteData(oldChart, temp, false);
        PatientChart.getPatientData(init);
        
    }//GEN-LAST:event_updateChartButtonActionPerformed

    private void closeChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeChartButtonActionPerformed
            // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeChartButtonActionPerformed

    private void viewTreatmentRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTreatmentRecordButtonActionPerformed
        // TODO add your handling code here:
        String first = pFName1.getText();
        String last = pLName.getText();
        String bday = birthdate.getText();
        String n = first + " " + last + " " + bday;
        Boolean accessGranted;
        accessGranted = EmployeeLogin.checkCredentials(1, 4);
        if(accessGranted){
            TreatmentRecord.findTreatmentRecord(n);
        }
        else{
            JOptionPane.showMessageDialog(null,"User does not have required permissions to access selection.");
        }
    }//GEN-LAST:event_viewTreatmentRecordButtonActionPerformed

    
    public static void showPatientChart(String n){
        Map<String, String> personMap = new LinkedHashMap<>();
        String line;
        ViewPatientChart pc = new ViewPatientChart();
        try{
            File charts = new File("src/main/java/HealthCareSystem/patientCharts.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    pc.setVisible(true);
                    pc.pFName1.setText(line.split(" ")[0]);
                    pc.pLName.setText(line.split(" ")[1]);
                    pc.birthdate.setText(line.split(" ")[2]);
                    pc.phone.setText(scanner.nextLine().split(" = ")[1]);
                    pc.insuranceProvider.setText(scanner.nextLine().split(" = ")[1]);
                    pc.address.setText(scanner.nextLine().split(" = ")[1]);
                    pc.doctor.setText(scanner.nextLine().split(" = ")[1]);
                    pc.social.setText(scanner.nextLine().split(" = ")[1]);
                }
            }
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    
    public static void storeWriteData(String data, String file, Boolean b){
        if (b){  
            try {
                FileWriter myWriter = new FileWriter(file, true);
                myWriter.write(data);
                myWriter.close();
            }catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
        }
        else{
            try {
                FileWriter myWriter = new FileWriter(file);
                myWriter.write(data);
                myWriter.close();
            }catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPatientChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPatientChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address;
    private javax.swing.JLabel address4;
    private javax.swing.JLabel birthdate;
    private javax.swing.JButton closeChartButton;
    private javax.swing.JLabel doctor;
    private javax.swing.JLabel insuranceProvider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel pFName;
    private javax.swing.JLabel pFName1;
    private javax.swing.JLabel pLName;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel social;
    private javax.swing.JButton updateChartButton;
    private javax.swing.JButton viewTreatmentRecordButton;
    // End of variables declaration//GEN-END:variables
}
