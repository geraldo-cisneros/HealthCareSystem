/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HealthCareSystem;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author geraldocisneros
 */
public class TreatmentRecord extends javax.swing.JFrame {

    /**
     * Creates new form TreatmentRecord
     */
    public TreatmentRecord() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pFName = new javax.swing.JLabel();
        pLName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Treatment = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Prescriptions = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReasonForVisit = new javax.swing.JTextArea();
        BirthDate = new javax.swing.JLabel();
        Height = new javax.swing.JTextField();
        Weight = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Treatment Record");

        pFName.setText("jLabel9");
        pFName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        pLName.setText("jLabel9");
        pLName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Last Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        Treatment.setColumns(20);
        Treatment.setRows(5);
        Treatment.setText("\n");
        Treatment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Treatment", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jScrollPane1.setViewportView(Treatment);

        Prescriptions.setColumns(20);
        Prescriptions.setRows(5);
        Prescriptions.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prescriptions", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jScrollPane2.setViewportView(Prescriptions);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        ReasonForVisit.setColumns(20);
        ReasonForVisit.setRows(5);
        ReasonForVisit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reason For Visit", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jScrollPane3.setViewportView(ReasonForVisit);

        BirthDate.setText("jLabel9");
        BirthDate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Birth Date", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        Height.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Height", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        Weight.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Weight", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(closeButton)
                .addGap(53, 53, 53)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pFName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pLName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Weight, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                                .addComponent(jScrollPane1)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(77, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pFName)
                    .addComponent(pLName)
                    .addComponent(BirthDate))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String first = pFName.getText();
        String last = pLName.getText();
        String bday = BirthDate.getText();
        String ht = Height.getText();
        String wt = Weight.getText();
        String reason = ReasonForVisit.getText();
        String treatment = Treatment.getText();
        String rx = Prescriptions.getText();
        String flbday = first + " " + last + " " + bday;
        String newData = "###\n" + first + " " + last + " " + bday + "\n" +
                         "Height = " + ht + "\nWeight = " + wt + "\nReason = " + reason +
                         "\nTreatment = " + treatment + "\nRx = " + rx +"\n###\n" ;
        
                
        String recordfile = "src/main/java/HealthCareSystem/treatmentRecords.txt";
        String output = "src/main/java/HealthCareSystem/output.txt";
        String tempfile = "src/main/java/HealthCareSystem/temp.txt";
        
        String type = "Treatment Record";
        Boolean found = recordExists(flbday, recordfile);
        if (found){
            String oldData = getTreatmentRecord(first + " " + last + " " + bday);
            ViewPatientChart.storeWriteData(oldData, tempfile, false);
            try {
                CancelAppointment.updateDataFile(output, recordfile, tempfile);
            } catch (IOException ex) {
                Logger.getLogger(TreatmentRecord.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        NewAppointment.writeToFile(recordfile, newData, type, true);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    public static void findTreatmentRecord(String n){
        TreatmentRecord tr = new TreatmentRecord();
        Map<String, String> treatmentMap = new LinkedHashMap<String, String>();
        String line, idString;
        idString = getEmpID();
        Character c = idString.charAt(1);
        Integer id = Character.getNumericValue(c);
        System.out.println(id);
        Boolean found = false;
        try{
            File charts = new File("src/main/java/HealthCareSystem/treatmentRecords.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    found = true;
                    tr.setVisible(true);
                    if (id == 2){
                        tr.Treatment.disable();
                        tr.Prescriptions.disable();
                    }
                    tr.pFName.setText(line.split(" ")[0]);
                    tr.pLName.setText(line.split(" ")[1]);
                    tr.BirthDate.setText(line.split(" ")[2]);
                    tr.Height.setText(scanner.nextLine().split(" =")[1]);
                    tr.Weight.setText(scanner.nextLine().split(" =")[1]);
                    tr.ReasonForVisit.setText(scanner.nextLine().split(" =")[1]);
                    tr.Treatment.setText(scanner.nextLine().split(" =")[1]);
                    tr.Prescriptions.setText(scanner.nextLine().split(" =")[1]);
                }
            }
            if (!found){
                    Integer selection = JOptionPane.showConfirmDialog(null, "Patient treatment record not found, would you like to create a new one?");
                    if(selection == 0){
                        tr.setVisible(true);
                        tr.pFName.setText(n.split(" ")[0]);
                        tr.pLName.setText(n.split(" ")[1]);
                        tr.BirthDate.setText(n.split(" ")[2]);
                    }
                }
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
         tr.setVisible(true);
        
    }
    public static Boolean recordExists(String n, String searchFile){
        Boolean found = false;
        String line;
        try{
            File charts = new File(searchFile);
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    found = true;            
                }
            }
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        return found;
    }
    public static String getTreatmentRecord(String n){
        TreatmentRecord tr = new TreatmentRecord();
        Map<String, String> treatmentMap = new LinkedHashMap<String, String>();
        String line;
        String firstlastbday = " ", ht= " ", wt= " ", reason= " ", treatment = " ", rx = " ", record = " ";
        Boolean found = false;
        try{
            File charts = new File("src/main/java/HealthCareSystem/treatmentRecords.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
                if(line.equals(n)){
                    found = true;
                    
                    firstlastbday = line;
                    ht = scanner.nextLine();
                    wt = scanner.nextLine();
                    reason = scanner.nextLine();
                    treatment = scanner.nextLine();
                    rx = scanner.nextLine();
                    
                }
            }
            if (!found){
                    JOptionPane.showMessageDialog(null, "Patient treatment record not found");
            }
            record = "###\n" + firstlastbday + "\n" +
                            ht + "\n" + wt + "\n" + reason + 
                            "\n" + treatment + "\n" + rx + "\n###\n";
            
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        System.out.println("record = " + record);
        return record; 
    }
    public static String getEmpID(){
        String line = " ", id = " ";
        try{
            File charts = new File("src/main/java/HealthCareSystem/loggedIn.txt");
            Scanner scanner = new Scanner(charts);
            while (scanner.hasNextLine()) {
                line = scanner.nextLine();
            }
            id = line;
        }catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }       
        return id;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TreatmentRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TreatmentRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TreatmentRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TreatmentRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TreatmentRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BirthDate;
    private javax.swing.JTextField Height;
    private javax.swing.JTextArea Prescriptions;
    private javax.swing.JTextArea ReasonForVisit;
    private javax.swing.JTextArea Treatment;
    private javax.swing.JTextField Weight;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel pFName;
    private javax.swing.JLabel pLName;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
