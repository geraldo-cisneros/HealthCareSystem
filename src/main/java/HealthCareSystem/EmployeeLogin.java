/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HealthCareSystem;
import HealthCareSystem.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JOptionPane;
import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Double.parseDouble;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Scanner; // Import the Scanner class to read text files

/**
 *
 * @author geraldocisneros
 */
public class EmployeeLogin extends javax.swing.JFrame {
    Connection conn = null; 
    PreparedStatement pst = null; 

    /**
     * Creates new form EmployeeLogin
     */
    public EmployeeLogin() {
        initComponents();
        Toolkit tk = getToolkit();
        Dimension size = tk.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginButton = new javax.swing.JButton();
        empIDLabel = new javax.swing.JLabel();
        empID = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        empIDLabel.setText("Employee ID");

        empID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empIDActionPerformed(evt);
            }
        });

        passwordLabel.setText("Password");

        jLabel1.setText("Health Care System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(empIDLabel)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginButton)
                            .addComponent(empID, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(password)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel1)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empIDLabel)
                    .addComponent(empID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(loginButton)
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
            String user = empID.getText();
            String pass = password.getText();
            MainInterface m = new MainInterface();
            Boolean found = false;

            try {
                File empAccounts = new File("src/main/java/HealthCareSystem/employeeLogin.txt");
                Scanner myReader = new Scanner(empAccounts);
                String line;
                String userPass = user + " " + pass;
                
                while (myReader.hasNextLine()) {
                    line = myReader.nextLine();
                    System.out.println(line);
                    System.out.println(userPass);
                    if (userPass.equals(line)){
                        found = true;
                        try {
                            FileWriter myWriter = new FileWriter("src/main/java/HealthCareSystem/loggedIn.txt");
                            myWriter.write(user);
                            myWriter.close();
                        }catch (IOException e) {
                            System.out.println("An error occurred.");
                            e.printStackTrace();
                        }                        
                        myReader.close();
                        m.currentlyLoggedIn.setText(user);
                        m.setVisible(true);
                        this.dispose();      
                    }
                }
                
            myReader.close();
            } catch (FileNotFoundException e) {
                  System.out.println("An error occurred.");
                  e.printStackTrace();
            }
            if (found == false){
                    JOptionPane.showMessageDialog(null, "Invalid Username or Password");
            }
             
    }//GEN-LAST:event_loginButtonActionPerformed

    public static Boolean checkCredentials(int reqAccessMin, int reqAccessMax){
        Boolean accessGranted = false;
        String sub;
        try{
            File empAccounts = new File("src/main/java/HealthCareSystem/loggedIn.txt");
            Scanner myReader = new Scanner(empAccounts);
            String line;
            line = myReader.nextLine();
            sub = line.substring(0, 2);
            int i = Integer.parseInt(sub);
            if (i > reqAccessMin && i < reqAccessMax ){
                accessGranted = true;
            }
            else{
                accessGranted = false;
            }
            System.out.println(sub);
              
        } catch (FileNotFoundException e) {
                 System.out.println("An error occurred.");
                 e.printStackTrace();
        }
        return accessGranted;
    }
    
    public static void generateDailyReport(){
        LocalDate date = LocalDate.now();
        
        String d = date.format(DateTimeFormatter.ofPattern("MM/dd/yyyy"));
        Double total = 0.00;
        Double val = 0.00;
        Integer count = 0;
        String data = " ";
        String file = "src/main/java/HealthCareSystem/dailyReport.txt";
         try {
                File appointments = new File("src/main/java/HealthCareSystem/paymentInfo.txt");
                Scanner myReader = new Scanner(appointments);
                String line;
                while (myReader.hasNextLine()) {
                    line = myReader.nextLine();
                    if (line.contains("Amount")){
                        val = parseDouble(line.substring(9));
                        total += val;
                        count ++;
                        
                    }
                }
            } catch (FileNotFoundException e) {
                  System.out.println("An error occurred.");
                  e.printStackTrace();
            }
         data = "**************************\n"+
                "DAILY REPORT FOR " + d + "\n"+
                "**************************\n"+
                "Total Revenue: $" + String.format("%.2f", total) + "\n" +
                "Total Patients Seen: " + count + "\n";
         
         ViewPatientChart.storeWriteData(data, file, false);
        //if time = x
            //while line.contains("Amount"){
                //total += Integer.parseInt(line.split($)[1]);
            //get number of patients seen
            //get total revenue 
    }
    private void empIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empIDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_empIDActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Calendar cal = Calendar.getInstance();
        int currentHour = cal.get(Calendar.HOUR);
        if (currentHour > 3) {
           generateDailyReport();
    //then rock on
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField empID;
    private javax.swing.JLabel empIDLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordLabel;
    // End of variables declaration//GEN-END:variables
}
